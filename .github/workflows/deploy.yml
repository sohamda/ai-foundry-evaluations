name: Deploy Azure AI Foundry Project

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Azure CLI
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    - name: Validate Bicep files
      run: |
        az bicep build --file infra/main.bicep
        az bicep build --file infra/modules/model-deployment.bicep

    - name: Lint Bicep files
      run: |
        az bicep lint --file infra/main.bicep
        az bicep lint --file infra/modules/model-deployment.bicep

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Set deployment variables
        run: |
          echo "RESOURCE_GROUP_NAME=rg-ai-foundry-eval" >> $GITHUB_ENV
          echo "LOCATION=swedencentral" >> $GITHUB_ENV

      - name: Create Resource Group
        run: |
          # Check if the resource group exists
          az group show --name ${{ env.RESOURCE_GROUP_NAME }} || \
          # Create the resource group if it doesn't exist
          az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.LOCATION }}

      - name: Deploy Bicep template
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: infra/main.bicep
          parameters: infra/main.parameters.json

  evaluate:
    name: Run AI Foundry Evaluations
    uses: ./.github/workflows/evaluator.yml
    needs: deploy
    if: success() && (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch')
    with:
      environment: 'main'
      project-name: 'ai-foundry-eval'
    secrets: inherit

  post-deployment:
    name: Post-Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy, evaluate]
    if: always() && needs.deploy.result == 'success'
    
    steps:
      - name: Create final summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          
          # 🔍 Post-Deployment Evaluation Results
          
          ## 📊 Evaluation Status
          - **Status**: ${{ needs.evaluate.outputs.evaluation_status || 'Not Run' }}
          - **Results**: ${{ needs.evaluate.outputs.evaluation_results || 'No results available' }}
          
          ## 🎉 Deployment Complete
          Your AI Foundry project is deployed and ${{ needs.evaluate.result == 'success' && 'evaluated' || 'ready for use' }}!
          
          ${{ needs.evaluate.result == 'success' && '✅ All evaluations passed - Your AI model is production-ready!' || '⚠️ Evaluations were skipped or failed - Please review before using in production.' }}
          EOF